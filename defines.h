/*
 * defines.h
 *
 *  Created on: 20/07/2015
 *      Author: Alessandro
 */

#ifndef DEFINES_H_

#define SIZE_BUF1		17
#define SIZE_BUF2		17
#define SIZE_BUF3		21
#define SIZE_BUF4_TX	26
#define SIZE_BUF4_RX	70
#define SIZE_BUF5_TX	26
#define SIZE_BUF5_RX	28
#define SIZE_BUF6		170
#define SIZE_BUF7		22
#define SIZE_BUF8		22
#define SIZE_BUF9		33
#define SIZE_BUF10		22
#define SIZE_BUF11		22
#define SIZE_BUF12		34
#define SIZE_BUF_ANT_ON	33

#define LED_ON			BIT5
#define LED_OFF			BIT4
#define LED_ONLINE		BIT3

#define BTN_ON			BIT5
#define BTN_OFF			BIT4
#define BTN_CONNECT		BIT3

#define CONNECT			1
#define ONLINE			2
#define PROCESS_BUFF	3
#define ON_ANTENNA		4
#define OFF_ANTENNA		5

const unsigned char buf1[17] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0x49, 0x80, 0x01, 0x80,
		0xFF, 0x17, 0x3A, 0x7E };
const unsigned char buf2[17] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x74, 0x31, 0x80, 0x01, 0x80,
		0xFF, 0xF8, 0x25, 0x7E };
const unsigned char buf3[21] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0x31, 0x80, 0x01, 0x02,
		0xFF, 0x04, 0x0C, 0x00, 0x00, 0x4D, 0x4E, 0x7E };
const unsigned char buf4[26] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0x31, 0x80, 0x01, 0x02,
		0xFF, 0x05, 0x09, 0x00, 0x01, 0x01, 0x04, 0xA5, 0x00, 0x00, 0x0E, 0xBA,
		0x7E };
const unsigned char buf5[26] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x31, 0x80, 0x01, 0x02,
		0xFF, 0x05, 0xE0, 0x01, 0x01, 0x01, 0x04, 0xA5, 0x00, 0x00, 0xA3, 0x85,
		0x7E };
const unsigned char buf6[170] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0x31, 0x80, 0x01, 0x02,
		0xFF, 0x04, 0xA6, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x04, 0xA4, 0x00,
		0x00, 0x04, 0x71, 0x03, 0x00, 0x04, 0xB0, 0x03, 0x00, 0x04, 0xB1, 0x03,
		0x00, 0x05, 0x10, 0x04, 0x00, 0x00, 0x05, 0x11, 0x04, 0x00, 0x00, 0x04,
		0x40, 0x04, 0x00, 0x04, 0x41, 0x04, 0x00, 0x04, 0xFE, 0x0B, 0x00, 0x04,
		0x3E, 0x0C, 0x00, 0x04, 0x3F, 0x0C, 0x00, 0x04, 0x79, 0x0D, 0x00, 0x05,
		0x30, 0x05, 0x00, 0x00, 0x05, 0x31, 0x05, 0x00, 0x00, 0x04, 0xA2, 0x04,
		0x00, 0x04, 0x60, 0x08, 0x00, 0x04, 0x61, 0x08, 0x00, 0x04, 0x8C, 0x0E,
		0x00, 0x17, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x17, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
		0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD3, 0x50,
		0x7E };
const unsigned char buf7[22] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x79, 0x31, 0x80, 0x01, 0x8A,
		0xFF, 0x05, 0x10, 0x04, 0x00, 0x00, 0x93, 0x0D, 0x7E };
const unsigned char buf8[22] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7A, 0x31, 0x80, 0x01, 0x8A,
		0xFF, 0x05, 0x11, 0x04, 0x00, 0x00, 0xDD, 0x03, 0x7E };
const unsigned char buf9[33] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7B, 0x31, 0x80, 0x01, 0x8A,
		0xFF, 0x04, 0x40, 0x04, 0x00, 0x04, 0x41, 0x04, 0x00, 0x04, 0x3E, 0x0C,
		0x00, 0x04, 0x3F, 0x0C, 0x00, 0x04, 0xC8, 0x7E };
const unsigned char buf10[22] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7C, 0x31, 0x80, 0x01, 0x8B,
		0xFF, 0x05, 0x10, 0x04, 0x00, 0x00, 0xFC, 0x3C, 0x7E };
const unsigned char buf11[22] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x31, 0x80, 0x01, 0x8B,
		0xFF, 0x05, 0x11, 0x04, 0x00, 0x00, 0x01, 0x92, 0x7E };
const unsigned char buf12[34] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5E, 0x7D, 0x31, 0x80, 0x01,
		0x8B, 0xFF, 0x04, 0x40, 0x04, 0x00, 0x04, 0x41, 0x04, 0x00, 0x04, 0x3E,
		0x0C, 0x00, 0x04, 0x3F, 0x0C, 0x00, 0xAC, 0xF2, 0x7E };
const unsigned char cmdBuf_ant_off[33] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x89, 0x32, 0x80, 0x01, 0x03,
		0xFF, 0x04, 0xA2, 0x04, 0x00, 0x04, 0x60, 0x08, 0x00, 0x04, 0x61, 0x08,
		0x00, 0x04, 0x8C, 0x0E, 0x00, 0x63, 0xBF, 0x7E };
const unsigned char cmdBuf_ant_on[33] =
{ 0x7E, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8A, 0x32, 0x80, 0x01, 0x03,
		0xFF, 0x04, 0xA2, 0x04, 0x01, 0x04, 0x60, 0x08, 0x01, 0x04, 0x61, 0x08,
		0x01, 0x04, 0x8C, 0x0E, 0x01, 0x3B, 0x1D, 0x7E };

unsigned char rxBuffer[255] = { 0 };			// Buffer de recep��o UART
unsigned char msgIndex = 0x00;					// Index atual da mensagem.
unsigned char sizeBuff = 0x00;					// Tamanho do buffer enviado e que deve ser recebido
unsigned int contBytes = 0x00;					// Indice do rxBuffer
unsigned int gLedConect = 0x00;					// Bot�o connect
unsigned int gLedInput = 0x00;					// Bot�o input
unsigned int gLedOutput = 0x00;					// Bot�o output
unsigned int state = 0x00;						// Estado atual da m�quina
unsigned int buff = 1;							// Inicia com o buf valendo BUF1
unsigned int gFlagTrataBuff = 0x00;				// Tratamento do buffer de RX zerado.
unsigned int DELAY = 100000;
unsigned int dadoOK = 0x00;
unsigned int oldState = 0x00;

#define DEFINES_H_

#endif /* DEFINES_H_ */
